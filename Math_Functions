/**
	Aaron Cantu
	HW1-q5
	Write a C++ program that reads a sequence of doubles. 
	The program should then print the mean,
	median, mode, standard deviation and variance of 
	that sequence.
	EE5103
	2/5/22

*/

#include <iostream>
#include <string.h>
#include <math.h>
using std::cout;
using std::cin;
using std::endl;

double mean(double[]);
double mode(double[]);
double median(double[]);
double standardDeviation(double[]);
double variance(double[]);

int main()
{

	double x[10];
	double a =0, b=0, c=0, d =0, e=0;
	double y=0;
	char temp[10];


	for(int i = 0; i< 10; i++)
		x[i] =0;

	cout << "Please enter up to 10 possible values one at a time: \nNote two 0's in a row will end program.\n";

	for(int i=0;i<10; i++){
		cout << (i+1) << ".) ";
		cin >> x[i];
		cout << endl;
		cout << "If you want to stop count enter 123.456, if not enter all 10 values\n";
		if(x[i] == 123.456){
			x[i] = 0;
			i = 9;
		}

	}

	a = mean(x);

	cout << "The mean is: " << a << endl;

	b = mode(x);

	cout << "The mode is: " << b << endl;

	c = median(x);

	cout << "The median is: " << c << endl;

	d = standardDeviation(x);

	cout << "The Standard Deviation is: " << d << endl;

	e = variance(x);

	cout << "The variance is: " << e << endl;


}
//******************************************************************************
//functions here!
double mean(double y[10]){
	double t =0.00;
	double count =0.00;

	for(int i = 0; i < 10; i++){
		t += y[i];
		count++;
		//If we run into two 0's we end program.
		if(y[i] == 0 && i <= 9){
			if(y[i+1] == 0){
				i = 9;
				count--;
			}
		}
		
	}

	t = t/count;
	return t;

}

double mode(double y[]){
	double t[10];
	int add =0;
	double pCount[10];
	int po=0;
	double m=0;
	for(int j = 0; j<10; j++)
		t[j] = y[j];

	for(int i =0;i<10;i++)
	{
		if(y[i] == 0 && i <= 9 && y[i+1] == 0){
			if(y[i+2] == 0){
				break;
			}
		}

		for(int j=1; j<10; j++)
		{
			if(y[i] == y[j]){
				add++;
			}
		}
		pCount[i] = add;
		add =0;
	}

	for(int i =0; i<10; i++)
	{
		if(y[i] == 0 && i <= 9){
			if(y[i+1] == 0){
				break;
			}
		}
		
		for(int j = 1;j<10;j++)
		{
			if(pCount[i] == pCount[j] && j != 9)
				j++;
			if(pCount[i] > pCount[j])
				//cout << "M should be stored\n";
				m = y[i];
		}
	}


	return m;
}

double median(double y[]){
	int count =0;
	for(int i = 0; i < 10; i++)
	{
			count++;
			//If we run into two 0's we end program.
			if(y[i] == 0 && i <= 9)
			{
				if(y[i+1] == 0)
				{
					i = 9;
					count--;
				}
			}
			
	}
	return y[(count/2)];

}

double standardDeviation(double y[]){
	double x =0;
	double t=0;
	double m = 0;
	m = mean(y);

	for(int i =0; i<10;i++){
		if(y[i] == 0 && i <= 9)
			{
				if(y[i+1] == 0)
				{
					i = 9;
				}
			}

		x = y[i] - m;
		y[i] = pow(x,2);
	}

	t = mean(y);
	x=0;
	x = pow(t, 0.5);

	return x;

}
double variance(double y[]){
	double x =0;
	double t=0;
	double m = 0;
	m = mean(y);

	for(int i =0; i<10;i++){
		if(y[i] == 0 && i <= 9)
			{
				if(y[i+1] == 0)
				{
					i = 9;
				}
			}

		x = y[i] - m;
		y[i] = pow(x,2);
	}

	t = mean(y);
	return t;
}
